{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\react kurs udemy\\\\section 8\\\\01-starting-project\\\\01-starting-project\\\\src\\\\Components\\\\User\\\\UserAdd.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport \"./UserAdd.css\";\nimport { useState } from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserAdd = props => {\n  _s();\n\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (user.trim().length === 0 || email.trim().length === 0) {\n      setError({\n        title: \"Doslo je do greske\",\n        message: \"Molimo ukucajte vase podatke\"\n      });\n      return;\n    }\n\n    if (!email.includes(\"@\")) {\n      setError({\n        title: \"Doslo je do greske\",\n        message: \"Email mora da sadrzi @\"\n      });\n      return;\n    }\n\n    props.onFormSubmit(user, email);\n    setUser(\"\");\n    setEmail(\"\");\n  };\n\n  const errorHandler = () => {\n    setError();\n  };\n\n  const handleName = event => {\n    setUser(event.target.value);\n  };\n\n  const handleEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(Modal, {\n      title: error.title,\n      message: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-control\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ime korisnika\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Unesite ime\",\n          value: user,\n          onChange: handleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email korisnika\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Unesite email\",\n          value: email,\n          onChange: handleEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserAdd, \"H0UbNRPWWCNJngcQI+SiDE86auM=\");\n\n_c = UserAdd;\nexport default UserAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAdd\");","map":{"version":3,"sources":["C:/Users/Korisnik/Desktop/react kurs udemy/section 8/01-starting-project/01-starting-project/src/Components/User/UserAdd.js"],"names":["Card","Button","useState","Modal","UserAdd","props","user","setUser","email","setEmail","error","setError","handleSubmit","event","preventDefault","trim","length","title","message","includes","onFormSubmit","errorHandler","handleName","target","value","handleEmail"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,eAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;;AAEA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAIR,IAAI,CAACS,IAAL,GAAYC,MAAZ,KAAuB,CAAvB,IAA4BR,KAAK,CAACO,IAAN,GAAaC,MAAb,KAAwB,CAAxD,EAA2D;AACzDL,MAAAA,QAAQ,CAAC;AACPM,QAAAA,KAAK,EAAE,oBADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA;AACD;;AAED,QAAI,CAACV,KAAK,CAACW,QAAN,CAAe,GAAf,CAAL,EAA0B;AACxBR,MAAAA,QAAQ,CAAC;AACPM,QAAAA,KAAK,EAAE,oBADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA;AACD;;AAEDb,IAAAA,KAAK,CAACe,YAAN,CAAmBd,IAAnB,EAAyBE,KAAzB;AAEAD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAvBD;;AAyBA,QAAMY,YAAY,GAAG,MAAM;AACzBV,IAAAA,QAAQ;AACT,GAFD;;AAGA,QAAMW,UAAU,GAAIT,KAAD,IAAW;AAC5BN,IAAAA,OAAO,CAACM,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAIZ,KAAD,IAAW;AAC7BJ,IAAAA,QAAQ,CAACI,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,eACGd,KAAK,iBAAI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAK,CAACO,KAApB;AAA2B,MAAA,OAAO,EAAEP,KAAK,CAACQ;AAA1C;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,QAAQ,EAAEN,YAAzC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,aAFd;AAGE,UAAA,KAAK,EAAEN,IAHT;AAIE,UAAA,QAAQ,EAAEgB;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,eAFd;AAGE,UAAA,KAAK,EAAEd,KAHT;AAIE,UAAA,QAAQ,EAAEiB;AAJZ;AAAA;AAAA;AAAA;AAAA,gBATF,eAeE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAwBD,CAhED;;GAAMrB,O;;KAAAA,O;AAkEN,eAAeA,OAAf","sourcesContent":["import Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\nimport \"./UserAdd.css\";\r\nimport { useState } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nconst UserAdd = (props) => {\r\n  const [user, setUser] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (user.trim().length === 0 || email.trim().length === 0) {\r\n      setError({\r\n        title: \"Doslo je do greske\",\r\n        message: \"Molimo ukucajte vase podatke\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!email.includes(\"@\")) {\r\n      setError({\r\n        title: \"Doslo je do greske\",\r\n        message: \"Email mora da sadrzi @\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    props.onFormSubmit(user, email);\r\n\r\n    setUser(\"\");\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setError();\r\n  };\r\n  const handleName = (event) => {\r\n    setUser(event.target.value);\r\n  };\r\n  const handleEmail = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <Modal title={error.title} message={error.message}></Modal>}\r\n      <Card className=\"card-wrap\">\r\n        <form className=\"form-control\" onSubmit={handleSubmit}>\r\n          <label>Ime korisnika</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Unesite ime\"\r\n            value={user}\r\n            onChange={handleName}\r\n          />\r\n          <label>Email korisnika</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Unesite email\"\r\n            value={email}\r\n            onChange={handleEmail}\r\n          />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </form>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserAdd;\r\n"]},"metadata":{},"sourceType":"module"}